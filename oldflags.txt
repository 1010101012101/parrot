# vim: ft=make:

# Memory safety checks
# Transfer errors (-mem-trans) are too tough for us right now
SPLINTFLAGS_MEMORY_SAFETY = \
    -mem-trans \
    -memchecks \
    +bufferoverflow \
    +bufferoverflowhigh \
    +read-only-strings \
    +read-only-trans \
    -strict-destroy \
    -strict-use-released \
    +use-released \
    -must-free \
    -mustfreefresh \
    -mustfreeonly \
    +null \
    +nullptrarith \
    +nullret \
    -ptr-arith \
    +ptr-negate \
    -zero-ptr \

# Macro safety checks
SPLINTFLAGS_MACRO_SAFETY = \
    +macro-assign \
    +macro-empty \
    +macro-parens \
    +macro-redef \
    +macro-stmt \
    +macro-unrecog \

# Watch for unsafe comparisons
SPLINTFLAGS_UNSAFE_COMPARISONS = \
    +bool-compare \
    +ptr-compare \
    +real-compare \
    +unsigned-compare

# But allow us some slop in boolean comparisons
SPLINTFLAGS_BOOLEAN_SLOP = \
    -pred-bool-int \
    -pred-bool-ptr \
    -pred-bool-others \
    -boolops \
    +bool-int \

# const and other qualifiers
# Report qualifier mismatches only if dangerous (+relax-quals)
SPLINTFLAGS_QUALIFIERS = \
    +relax-quals

# Symbol definitions
SPLINTFLAGS_SYMBOL_DEFINITIONS = \
    +decl-undef \
    +incon-defs \
    +incon-defs-lib \

# Format codes
SPLINTFLAGS_FORMAT = \
    +format-code \
    +format-type \

# Problems with evaluation and control structions
SPLINTFLAGS_EVALUATION = \
    +controlnestdepth 15 \
    +duplicate-quals \
    +eval-order \
    +eval-order-uncon \

# Types and stuff
SPLINTFLAGS_TYPES = \
    +char-index \
    +char-int \
    +enum-members \
    +ignore-signs \
    +long-integral \
    +match-any-integral \
