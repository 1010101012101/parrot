.version 0
.chunk "caller"
.constants
0 "caller at start"
1 "value of I23 is "
2 "callee"
3 "caller at end"
.metadata
.bytecode

    # print "caller at start"
    set_imm S0, 0, 0
    deref   S0, CONSTS, S0
    set_imm I0, 0, 1
    print_s I0, S0, x

    # print "value of I23 is " ...
    set_imm I23, 39, 15
    set_imm S1, 0, 1
    deref   S1, CONSTS, S1
    print_s I0, S1, x
    print_i I0, I23, x

    # create a new call frame

    # point P1 at the current call frame
    set_imm  I12, 0,  CF
    deref    P1,  CF, I12

    # allocate a new call frame from the gc
    set_imm  I10, 8, 0
    set_imm  I11, 0, 0
    gc_alloc P0, I10, I11

    # intialize P0 (the new call frame) - INTERP
    deref    P2, P1, INTERP
    set_ref  P0, INTERP, P2
    # set new cf's PCF to the current cf (P1)
    set_ref  P0, PCF, P1
    # initialize some values to zero
    set_imm  P2, 0, 0
    set_ref  P0, EH,       P2
    set_ref  P0, RETPC,    P2
    set_ref  P0, RETCHUNK, P2
    set_ref  P0, SPILLCF,  P2

    # set the return PC for the current cf
    add_i   RETPC, PC, 6
    set     RETCHUNK, CHUNK, x

    # activate the new call frame and goto the callee chunk
    set     CF, P1, x
    set_imm S0, 0, 2
    deref   S0, CONSTS, S0
    set_imm I0, 0, 0
    goto_chunk I0, S0, x

    # we're back, so activate the parent call frame
    set CF, PCF, x

    # print "caller at end "
    set_imm S3, 0, 3
    print_s I0, S3, x

    # print "value of I23 is " ...
    set_imm S4, 0, 1
    print_s I0, S4, x
    print_i I0, I23, x
    
.chunk "callee"
.constants
0 "in callee chunk"
1 "value of I23 is "
2 "parent call frame's value of I23 is "
3 "OH NOES!  Contol flow misflowed!"
.metadata
.bytecode

    # print "in callee chunk"
    set_imm I0, 0, 1
    set_imm S0, 0, 0
    deref   S0, CONSTS, S0
    print_s I0, S0, x

    #print "value of I23 is "...
    set_imm S1, 0, 1
    deref   S1, CONSTS, S1
    print_s I0, S1, x
    set_imm I23, 99, 99
    print_i I0, I23, x

    # poke into the parent call frame
    deref I1, PCF, I23
    set_imm S2, 0, 2
    deref S2, CONSTS, S2
    print_s I0, S2, x
    print_i I0, I1, x

    # figure out return PC and chunk
    deref   P0, CF, PCF
    deref   P1, P0, RETPC
    deref   S1, P0, RETCHUNK
    goto_chunk P1, S1, x

    # should be unreachable
    set_imm S0, 0, 3
    set_imm I0, 0, 1
    print_s I0, S0, x
