Contributors welcome.

* Improve the C code
    * use fixed-width C99 types as mandated by M0 spec
    * add nice malloc/calloc wrappers
    * use a few well-chosen macros to reduce boilerplate

* Fixup C data structures to follow "big blob of memory" M0 spec
    * in particular, M0_CallFrame is reasonably correct, while segments are not
    * the constant segment is particularly troublesome

* Implement remaining M0 ops

* Add M0 string type
    * this probably needs spec work

* Verify all error paths for file handling
    * Add tests for all combinations of missing/invalid M0 files
    * Add Valgrind tests that no combination leaks memory or has invalid access

* Reduce memory use of the M0 interpreter
    * Change fopen/fread/fclose to use mmap
    * Replace pointers in internal structs with offsets into m0b files
    * Allow fallback when mmap is not available?
    * Reduce use of structs declared in C

* Integrate Makefile into Parrot's existing structure
    * Allow the sane use of headerizer
    * Probe for necessary system capabilities (mmap, valgrind?)
